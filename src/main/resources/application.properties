# Configuration file
# key = value
# https://quarkus.io/guides/maven-tooling#quarkus-package-pkg-package-config_configuration


##### Logging ##########################################################################################################
quarkus.log.level=INFO
quarkus.log.file.enable=false
quarkus.log.console.enable=true
quarkus.log.console.level=INFO

##### Docker & Kubernetes ##############################################################################################
# parameters for kubernetes yaml files generated by quarkus
# https://quarkus.io/guides/deploying-to-kubernetes below target/kubernetes
#quarkus.container-image.registry=docker.io
#quarkus.container-image.group=baloise
#optional, defaults to the application name
#quarkus.container-image.name=kube-secret-watcher
#optional, defaults to the application version
#quarkus.container-image.tag=1.0.0
#app.kubernetes.io/xxx labels
#quarkus.kubernetes.name=kube-secret-watcher
#quarkus.kubernetes.version=1.0.0
#quarkus.kubernetes.replicas=1

##### metrics ##########################################################################################################
quarkus.smallrye-metrics.extensions.enabled=true
quarkus.smallrye-metrics.path=/metrics

##### readiness and liveness probes ####################################################################################
# curl http://localhost:8080/health/live
# curl  http://localhost:8080/health/ready
quarkus.health.extensions.enabled=true
#quarkus.smallrye-health.root-path=/health
#quarkus.smallrye-health.liveness-path=/live
#quarkus.smallrye-health.readiness-path=/ready
#quarkus.smallrye-health.group-path=/group
#quarkus.kubernetes.readiness-probe.initial-delay=15s
#quarkus.kubernetes.readiness-probe.period=45s

##### fabric8 Kubernetes Client ########################################################################################
# kubernetes-client properties  https://github.com/quarkusio/quarkus/blob/master/extensions/kubernetes-client/runtime-internal/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesClientBuildConfig.java
# This parameter are only needed if not given in .kube/config
#URL of the Kubernetes API server
#quarkus.kubernetes-client.master-url=<url>
#quarkus.kubernetes-client.trust-certs=true
#quarkus.kubernetes-client.namespace=<namespace>
#quarkus.kubernetes-client.token=<token>
#quarkus.kubernetes-client.username=kube-secret-watcher
#quarkus.kubernetes-client.password=thepassword
#Watch reconnect interval
#quarkus.kubernetes-client.watch-reconnect-interval=PT1S
#Maximum reconnect attempts in case of watch failure By default there is no limit to the number of reconnect attempts
#quarkus.kubernetes-client.watch-reconnect-limit=-1
#Maximum amount of time to wait for a connection with the API server to be established
#quarkus.kubernetes-client.connection-timeout=PT10S
#Maximum amount of time to wait for a request to the API server to be completed
#quarkus.kubernetes-client.request-timeout=PT10S
#Maximum amount of time in milliseconds to wait for a rollout to be completed
#quarkus.kubernetes-client.rolling-timeout=PT15M
#HTTP proxy used to access the Kubernetes API server
#quarkus.kubernetes-client.http-proxy=localhost:8888
#HTTPS proxy used to access the Kubernetes API server
#quarkus.kubernetes-client.https-proxy=localhost:8888
#Proxy username
#quarkus.kubernetes-client.proxy-username=username
#Proxy password
#quarkus.kubernetes-client.proxy-password=password
#IP addresses or hosts to exclude from proxying
#quarkus.kubernetes-client.no-proxy=localhost
#If set to true, the application will attempt to look up the configuration from the API server
#quarkus.kubernetes-config.enabled=false
#If set to true, the application will not start if any of the configured config sources cannot be located
#quarkus.kubernetes-config.fail-on-missing-config=false
#ConfigMaps to look for in the namespace that the Kubernetes Client has been configured for
#quarkus.kubernetes-config.config-maps=myconfigMap



















